import{_ as s,c as a,a2 as e,o as t}from"./chunks/framework.C0utc8P3.js";const k=JSON.parse('{"title":"Vue3 + TypeScript 接入 UnoCSS 及常用原子类","description":"","frontmatter":{},"headers":[],"relativePath":"jsText/unocss.md","filePath":"jsText/unocss.md","lastUpdated":null}'),n={name:"jsText/unocss.md"};function l(o,i,h,d,p,c){return t(),a("div",null,i[0]||(i[0]=[e(`<h1 id="vue3-typescript-接入-unocss-及常用原子类" tabindex="-1">Vue3 + TypeScript 接入 UnoCSS 及常用原子类 <a class="header-anchor" href="#vue3-typescript-接入-unocss-及常用原子类" aria-label="Permalink to &quot;Vue3 + TypeScript 接入 UnoCSS 及常用原子类&quot;">​</a></h1><h2 id="一、简介" tabindex="-1">一、简介 <a class="header-anchor" href="#一、简介" aria-label="Permalink to &quot;一、简介&quot;">​</a></h2><p>UnoCSS 是一个高性能且极具灵活性的即时原子化 CSS 引擎，核心在于其灵活性，所有 CSS 工具类均通过预设提供。在 Vue3 + TypeScript 项目中接入 UnoCSS，可以显著提高开发效率和代码可维护性。</p><h2 id="二、安装与配置" tabindex="-1">二、安装与配置 <a class="header-anchor" href="#二、安装与配置" aria-label="Permalink to &quot;二、安装与配置&quot;">​</a></h2><h3 id="_1-安装-unocss" tabindex="-1">1. 安装 UnoCSS <a class="header-anchor" href="#_1-安装-unocss" aria-label="Permalink to &quot;1. 安装 UnoCSS&quot;">​</a></h3><p>在项目中安装 UnoCSS：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unocss</span></span></code></pre></div><h3 id="_2-配置-vite-插件" tabindex="-1">2. 配置 Vite 插件 <a class="header-anchor" href="#_2-配置-vite-插件" aria-label="Permalink to &quot;2. 配置 Vite 插件&quot;">​</a></h3><p>在 <code>vite.config.ts</code> 中引入 UnoCSS 插件：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UnoCSS </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;unocss/vite&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vite&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  plugins: [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UnoCSS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="_3-创建-unocss-配置文件" tabindex="-1">3. 创建 UnoCSS 配置文件 <a class="header-anchor" href="#_3-创建-unocss-配置文件" aria-label="Permalink to &quot;3. 创建 UnoCSS 配置文件&quot;">​</a></h3><p>创建 <code>uno.config.ts</code> 文件：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;unocss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 配置选项，如预设、规则等</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="_4-在主入口文件中引入" tabindex="-1">4. 在主入口文件中引入 <a class="header-anchor" href="#_4-在主入口文件中引入" aria-label="Permalink to &quot;4. 在主入口文件中引入&quot;">​</a></h3><p>在 <code>main.ts</code> 中引入 UnoCSS：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;virtual:uno.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="三、常用原子类" tabindex="-1">三、常用原子类 <a class="header-anchor" href="#三、常用原子类" aria-label="Permalink to &quot;三、常用原子类&quot;">​</a></h2><h3 id="_1-宽度和高度" tabindex="-1">1. 宽度和高度 <a class="header-anchor" href="#_1-宽度和高度" aria-label="Permalink to &quot;1. 宽度和高度&quot;">​</a></h3><ul><li><code>w-0</code>: <code>width: 0;</code></li><li><code>w-1</code>: <code>width: 0.25rem;</code></li><li><code>h-100px</code>: <code>height: 100px;</code></li><li><code>h--10px</code>: <code>height: -10px;</code></li><li><code>h-full</code>: <code>height: 100%;</code></li><li><code>min-w-screen</code>: <code>min-width: 100vw;</code></li></ul><h3 id="_2-颜色和背景" tabindex="-1">2. 颜色和背景 <a class="header-anchor" href="#_2-颜色和背景" aria-label="Permalink to &quot;2. 颜色和背景&quot;">​</a></h3><ul><li><code>text-25px</code>: <code>font-size: 25px;</code></li><li><code>text-#ff6700</code>: <code>color: #ff6700;</code></li><li><code>bg-#ccc</code>: <code>background: #ccc;</code></li></ul><h3 id="_3-边距和填充" tabindex="-1">3. 边距和填充 <a class="header-anchor" href="#_3-边距和填充" aria-label="Permalink to &quot;3. 边距和填充&quot;">​</a></h3><ul><li><code>m-2</code>: <code>margin: 0.5rem;</code></li><li><code>mt-4</code>: <code>margin-top: 1rem;</code></li><li><code>p-3</code>: <code>padding: 0.75rem;</code></li><li><code>pt-6</code>: <code>padding-top: 1.5rem;</code></li></ul><h3 id="_4-布局和定位" tabindex="-1">4. 布局和定位 <a class="header-anchor" href="#_4-布局和定位" aria-label="Permalink to &quot;4. 布局和定位&quot;">​</a></h3><ul><li><code>flex</code>: <code>display: flex;</code></li><li><code>items-center</code>: <code>align-items: center;</code></li><li><code>justify-between</code>: <code>justify-content: space-between;</code></li><li><code>h-screen</code>: <code>height: 100vh;</code></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span></code></pre></div>`,26)]))}const u=s(n,[["render",l]]);export{k as __pageData,u as default};
